-- CREATE TABLE Client (
--     client_id SERIAL PRIMARY KEY,
--     first_name VARCHAR(50) NOT NULL,
--     last_name VARCHAR(50) NOT NULL,
--     email VARCHAR(100) NOT NULL UNIQUE,
--     encr_pswd VARCHAR(60) NOT NULL,
--     location VARCHAR(50),
--     privilege CHAR(1) NOT NULL DEFAULT 'N' CHECK (privilege IN ('A', 'N')) -- defaults to normal user
-- );
-- CREATE TABLE Item (
--     item_id SERIAL PRIMARY KEY,
--     style_id INTEGER,
--     item_name VARCHAR(50) NOT NULL,
--     material VARCHAR(30),
--     price_per_unit NUMERIC(10, 2),
--     supplier VARCHAR(50),
--     color VARCHAR(20),
--     size VARCHAR(3) CHECK (size IN ('xs', 's', 'm', 'l', 'xl', '2xl', '3xl', '4xl', 'one', 'oth')), -- CHECK for valid sizes
--     gender CHAR(1) CHECK (gender IN ('M', 'W', 'U', 'B', 'G', 'T')), -- men, women, unisex, boy, girl, toddler
--     design VARCHAR(50),
--     brand VARCHAR(50),
--     reorder_threshold INTEGER DEFAULT 10,
--     img_path VARCHAR(100),
--     description VARCHAR(255),
--     category CHAR(1) NOT NULL DEFAULT 'O' CHECK (category IN ('O', 'A', 'N')) -- other, apparel, non-consumable
-- );

-- CREATE TABLE Event (
--     event_id SERIAL PRIMARY KEY,
--     name VARCHAR(30) NOT NULL,
--     segment VARCHAR(50),
--     start_date DATE NOT NULL,
--     end_date DATE NOT NULL,
--     notes VARCHAR(1000),
--     location VARCHAR(50),
--     img_path VARCHAR(50)
-- );

-- CREATE TABLE Request (
--     request_id SERIAL PRIMARY KEY,
--     item_id INTEGER NOT NULL,
--     submitter_id INT NOT NULL,
--     notes VARCHAR(100),
--     qty INT NOT NULL,
--     date DATE NOT NULL,
--     admin_id INT,
--     type CHAR(1) NOT NULL CHECK (type IN ('O', 'G', 'C', 'R')), -- Order, Grab, Checkout, Return
--     out_date DATE,
--     in_date DATE,
--     status CHAR(1) NOT NULL DEFAULT 'P' CHECK (status IN ('P', 'A', 'D')), -- Pending, Approved, Denied
--     FOREIGN KEY (submitter_id) REFERENCES Client(client_id),
--     FOREIGN KEY (admin_id) REFERENCES Client(client_id),
--     FOREIGN KEY (item_id) REFERENCES Item(item_id)
-- );
-- CREATE TABLE Closet_Inventory (
--     item_id INT NOT NULL,
--     location_id VARCHAR(20) NOT NULL,
--     date_restocked DATE,
--     qty INT NOT NULL,
--     PRIMARY KEY (item_id, location_id), -- Composite primary key
--     FOREIGN KEY (item_id) REFERENCES Item(item_id)
-- );
-- CREATE TABLE Event_Inventory (
--     event_id INTEGER NOT NULL,
--     item_id INTEGER NOT NULL,
--     planned_qty INT NOT NULL DEFAULT 0,
--     dispersed_qty INT NOT NULL DEFAULT 0,
--     PRIMARY KEY (event_id, item_id),
--     FOREIGN KEY (event_id) REFERENCES Event(event_id),
--     FOREIGN KEY (item_id) REFERENCES Item(item_id)
-- );
-- CREATE TABLE Style (
-- 	style_id SERIAL PRIMARY KEY,
-- 	description VARCHAR(255)
-- )

-- SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';
-- SELECT * FROM Item;
-- SELECT * FROM client;
SELECT * FROM request;

-- INSERT INTO Item (style_id, item_name)

-- INSERT INTO Client (first_name, last_name, email, encr_pswd, location, privilege)
-- VALUES ('Mike', 'Hartsell', 'mikehartsell01@outlook.com', 'password123', 'Dallas', 'A');

-- INSERT INTO Style (name, description)
-- VALUES ('shirt_1', 'A short sleeve heather grey athletic shirt, featuring a white logo printed on the torso');

-- INSERT INTO Item(style_id, item_name, material, price_per_unit, supplier, color, size, gender, design, brand, reorder_threshold, category)
-- VALUES ((SELECT style_id FROM Style where name = 'shirt_1'), 'shirt_1','spandex', 3.00, 'Amazon', 'Grey', 's', 'U', 'White CAT logo', 'Nike', 10, 'A');



